% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runSeries.R
\name{runSeries}
\alias{runSeries}
\title{Run a list of functions as series}
\usage{
runSeries(tasks = list(NULL), cb = NULL)
}
\arguments{
\item{tasks}{List of functions (anonymous and named) 
\strong{required}.}

\item{cb}{Anonymous or named function with signature 
\code{cb(error, data)} \strong{optional}.}
}
\value{
If \code{cb} is \code{NULL} the tasks' return values are returned 
in a named list (on error \code{NULL}). If \code{cb} is a function it is 
called upon completion of all tasks and gets passed an error value 
(default \code{NULL}) as first parameter and a named list of the tasks' 
return values (on error \code{NULL}) as second parameter.
}
\description{
\code{runSeries} runs its input tasks sequentially returning either a named 
list (on error \code{NULL}) or the value of a given callback.
}
\details{
If an error is encountered while calling the series without a 
callback \code{runSeries} immediately stops execution and returns 
\code{NULL}. If an error is encountered and a callback is defined 
\code{runSeries} immediately stops execution and calls the callback with 
the \code{data} parameter set to \code{NULL} and the \code{error} parameter 
set to the encountered error. Thus, the callback will always have only one 
non-\code{NULL} argument. Within the callback simply check for an error 
with \code{is.null(error)}. If the \code{error} object is not \code{NULL} 
it has a property \code{$task} indicating the function that failed.
}
\examples{
moo <- function() 'mooooooo'
callback <- function(err, d) {
  if (is.null(err)) d else stop(err, err$task)
}
runSeries(list(function() 1L, 
               function() 2L, 
               moo), 
          callback)

}
\seealso{
\code{\link{runWaterfall}} \code{\link{runRace}} 
\code{\link{runParallel}}
\url{https://github.com/feross/run-series}
}

